@page "/search"
@inject IEventService eventService
@inject IJSRuntime JSRuntime

<PageTitle>Pesquisa</PageTitle>

<div class="actionbar">
    <div class="div-input">
        <label for="search">Buscar um evento</label>
        <div>
            <input type="text" id="search" @onchange="(e) => SearchEvent(e)" autocomplete="off"/>
            <img src="/Icon-Search-Black.svg" class="img-input" />
        </div>
    </div>

    @foreach (var e in events)
    {
        <div class="div-search-resonse">
            <img src="@e.UrlImage" />

            <div class="resonse-address">
                <h5>@e.NameLocation</h5>
                <p>@e.Address</p>
            </div>

            <div class="resonse-hour">
                @e.FormatDateResponse();
            </div>
        </div>
    }
</div>

@code {

    List<Event> events = [];

    async Task SearchEvent(ChangeEventArgs changeEventArgs)
    {
        events = await eventService.Get(changeEventArgs.Value?.ToString() ?? string.Empty) ?? [];

        var jsInterOp = new JsInterop(JSRuntime);

        await jsInterOp.RemoveMarkers();

        foreach (var @event in events)
        {
            await jsInterOp.CreatMarker(new(@event.Latitude, @event.Longitude), @event);
        }
    }
    
}

